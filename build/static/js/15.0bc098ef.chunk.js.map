{"version":3,"sources":["history.js","auth/FetchInterceptor.js","services/ClientService.js","views/app-views/clients/UserView.js","components/shared-components/AvatarStatus/index.js","components/shared-components/ClientCompany/index.js","views/app-views/clients/index.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","push","window","location","reload","clientService","params","fetch","url","method","id","concat","UserView","Component","render","visible","close","this","props","_jsxs","Drawer","width","placement","onClose","closable","children","className","_jsx","Avatar","size","src","img","name","personalInfo","title","Divider","dashed","UserOutlined","CalendarOutlined","birthday","MobileOutlined","phoneNumber","MailOutlined","email","CompassOutlined","FacebookOutlined","href","facebook","TwitterOutlined","twitter","InstagramOutlined","instagram","GlobalOutlined","site","AvatarStatus","suffix","subTitle","type","icon","shape","gap","text","onNameClick","onClick","ClientCompany","bs","ClientList","constructor","arguments","state","users","userProfileVisible","selectedUser","loading","deleteUser","userId","setState","filter","item","success","content","duration","showUserProfile","userInfo","closeUserProfile","componentDidMount","getUsers","then","res","console","log","tableColumns","dataIndex","_","record","APP_PREFIX_PATH","sorter","compare","a","b","toLowerCase","address","street","suite","city","role","length","moment","lastOnline","unix","company","_Fragment","Loading","cover","Card","bodyStyle","Table","columns","dataSource","rowKey"],"mappings":"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","file":"static/js/15.0bc098ef.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\t// history.push(ENTRY_ROUTE)\r\n\t\t// window.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import fetch from 'auth/FetchInterceptor'\r\n\r\n\r\nconst clientService = {}\r\n\r\nclientService.getUsers = function (params) {\r\n  return fetch({\r\n    url: '/users',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n\r\nclientService.getUser = function (params) {\r\n    const id = params;\r\n    \r\n    return fetch({\r\n      url: `/users/${id}`,\r\n      method: 'get',\r\n      params\r\n    })\r\n  }\r\n\r\n  \r\n// clientService.setPost = function (data) {\r\n//   return fetch({\r\n//     url: '/posts',\r\n//     method: 'post',\r\n//     data: data\r\n//   })\r\n// }\r\n\r\nexport default clientService","import React, { Component } from 'react';\r\nimport { Avatar, Drawer, Divider } from 'antd';\r\nimport { \r\n\tMobileOutlined, \r\n\tMailOutlined, \r\n\tUserOutlined, \r\n\tCompassOutlined,\r\n\tCalendarOutlined,\r\n\tFacebookOutlined,\r\n\tInstagramOutlined,\r\n\tTwitterOutlined,\r\n\tGlobalOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport class UserView extends Component {\r\n\trender() {\r\n\t\tconst { data, visible, close} = this.props;\r\n\t\treturn (\r\n\t\t\t<Drawer\r\n\t\t\t\twidth={300}\r\n\t\t\t\tplacement=\"right\"\r\n\t\t\t\tonClose={close}\r\n\t\t\t\tclosable={false}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t<Avatar size={80} src={data?.img} />\r\n\t\t\t\t\t<h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n\t\t\t\t\t<span className=\"text-muted\">{data?.personalInfo.title}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Divider dashed />\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">id: {data?.id}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">Born in {data?.personalInfo.birthday}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<MobileOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.personalInfo.phoneNumber}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<MailOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.email? data?.email: '-'}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<CompassOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.personalInfo.location}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">Social profiles</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<FacebookOutlined />\r\n\t\t\t\t\t\t<a href=\"/#\" className=\"ml-3 text-dark\">{data?.personalInfo.facebook? data?.personalInfo.facebook : '-'}</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<TwitterOutlined />\r\n\t\t\t\t\t\t<a href=\"/#\" className=\"ml-3 text-dark\">{data?.personalInfo.twitter? data?.personalInfo.twitter : '-'}</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<InstagramOutlined />\r\n\t\t\t\t\t\t<a href=\"/#\" className=\"ml-3 text-dark\">{data?.personalInfo.instagram? data?.personalInfo.instagram : '-'}</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<GlobalOutlined />\r\n\t\t\t\t\t\t<a href=\"/#\" className=\"ml-3 text-dark\">{data?.personalInfo.site? data?.personalInfo.site : '-'}</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Drawer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UserView\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{/* {renderAvatar({icon, src, type, size, shape, gap, text })} */}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\n\r\nconst ClientCompany = (props) => {\r\n    const { name, bs } = props;\r\n    return (\r\n        <div className=\"avatar-status d-flex align-items-center\">\r\n            <div className=\"ml-2\">\r\n                <div>\r\n                    <div className=\"avatar-status-name\">{name}</div>\r\n                    \r\n                </div>\r\n                <div className=\"text-muted avatar-status-subtitle\">{bs}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientCompany","import React, { Component, useState } from 'react'\r\nimport { Card, Table, Tag, Tooltip, message, Button } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport UserView from './UserView';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\n// import userData from \"assets/data/user-list.data.json\";\r\nimport clientService from 'services/ClientService';\r\nimport ClientAddress from 'components/shared-components/ClientAddress';\r\nimport ClientCompany from 'components/shared-components/ClientCompany';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nexport class ClientList extends Component {\r\n\r\n    state = {\r\n        users: [],\r\n        userProfileVisible: false,\r\n        selectedUser: null,\r\n        loading: false,\r\n    }\r\n\r\n    deleteUser = userId => {\r\n        this.setState({\r\n            users: this.state.users.filter(item => item.id !== userId),\r\n        })\r\n        message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n    }\r\n\r\n    showUserProfile = userInfo => {\r\n        this.setState({\r\n            userProfileVisible: true,\r\n            selectedUser: userInfo\r\n        });\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({\r\n            userProfileVisible: false,\r\n            selectedUser: null\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        clientService.getUsers().then(res => {\r\n            this.setState({\r\n                users: res,\r\n                loading: false,\r\n            });\r\n            console.log('res', res);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { users, userProfileVisible, selectedUser, loading } = this.state;\r\n\r\n        const tableColumns = [\r\n            {\r\n                title: 'User',\r\n                dataIndex: 'name',\r\n                render: (_, record) => (\r\n                    <div className=\"d-flex\">\r\n                        <AvatarStatus src={record.img} name={record.name} subTitle={record.email} onNameClick={() => this.props.history.push(`${APP_PREFIX_PATH}/edit-profile/${record.id}`)} />\r\n                    </div>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.name.toLowerCase();\r\n                        b = b.name.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'Address',\r\n                dataIndex: 'address',\r\n                render: (_, record) => {\r\n                    console.log(\"record\", record);\r\n                    <div className='d-flex'>\r\n                        <ClientAddress street={record.address.street} suite={record.address.suite} city={record.address.city} />\r\n                    </div>\r\n                },\r\n                sorter: {\r\n                    compare: (a, b) => a.role.length - b.role.length,\r\n                },\r\n            },\r\n            {\r\n                title: 'Phone',\r\n                dataIndex: 'phone',\r\n                sorter: (a, b) => moment(a.lastOnline).unix() - moment(b.lastOnline).unix()\r\n            },\r\n            {\r\n                title: 'Website',\r\n                dataIndex: 'website',\r\n                sorter: {\r\n                    compare: (a, b) => a.status.length - b.status.length,\r\n                },\r\n            },\r\n            {\r\n                title: 'Company',\r\n                dataIndex: 'company',\r\n                render: (_, record) => (\r\n                    <div className='d-flex'>\r\n                        <ClientCompany name={record.company.name} bs={record.company.bs} />\r\n                    </div>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => a.status.length - b.status.length,\r\n                },\r\n            },\r\n            // {\r\n            // \ttitle: '',\r\n            // \tdataIndex: 'actions',\r\n            // \trender: (_, elm) => (\r\n            // \t\t<div className=\"text-right\">\r\n            // \t\t\t<Tooltip title=\"View\">\r\n            // \t\t\t\t<Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined />} onClick={() => {this.showUserProfile(elm)}} size=\"small\"/>\r\n            // \t\t\t</Tooltip>\r\n            // \t\t\t<Tooltip title=\"Delete\">\r\n            // \t\t\t\t<Button danger icon={<DeleteOutlined />} onClick={()=> {this.deleteUser(elm.id)}} size=\"small\"/>\r\n            // \t\t\t</Tooltip>\r\n            // \t\t</div>\r\n            // \t)\r\n            // }\r\n        ];\r\n        return (\r\n            <>\r\n                {\r\n                    loading ?\r\n                        <Loading cover='page' /> :\r\n                        <Card bodyStyle={{ 'padding': '0px' }} >\r\n                            <Table columns={tableColumns} dataSource={users} rowKey='id' />\r\n                            <UserView data={selectedUser} visible={userProfileVisible} close={() => { this.closeUserProfile() }} />\r\n                        </Card >\r\n\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientList\r\n"],"sourceRoot":""}